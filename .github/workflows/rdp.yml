name: Persistent RDP Access

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # ÿ™ÿ¥ÿ∫ŸäŸÑ ŸäŸàŸÖŸäŸãÿß ÿßŸÑÿ≥ÿßÿπÿ© 00:00 UTC

jobs:
  rdp-access:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Enable RDP and Prevent Sleep
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 1
          netsh advfirewall firewall delete rule name="RDP-Tailscale" > $null
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389
          powercfg /change standby-timeout-ac 0
          powercfg /change hibernate-timeout-ac 0
          Restart-Service TermService

      - name: Create RDP User
        run: |
          $password = -join ((33..126) | Get-Random -Count 16 | ForEach-Object {[char]$_})
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          if (-not (Get-LocalUser -Name "RDP")) {
            New-LocalUser -Name "RDP" -Password $securePass -AccountNeverExpires
            Add-LocalGroupMember -Group "Administrators" -Member "RDP"
            Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDP"
          } else {
            Set-LocalUser -Name "RDP" -Password $securePass
          }
          echo "RDP_PASSWORD=$password" >> $env:GITHUB_ENV

      - name: Install Tailscale
        run: |
          $url = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $path = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $url -OutFile $path
          Start-Process msiexec.exe -ArgumentList "/i", "`"$path`"", "/quiet", "/norestart" -Wait
          Remove-Item $path

      - name: Connect to Tailscale
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-${{ github.run_id }}
          $tsIP = $null
          for ($i=0; $i -lt 10; $i++) {
            $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
            if ($tsIP) { break }
            Start-Sleep -Seconds 5
          }
          if (-not $tsIP) { Write-Error "No Tailscale IP"; exit 1 }
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

      - name: Send RDP Info to Gmail
        run: |
          $smtpServer = "smtp.gmail.com"
          $smtpPort = 587
          $from = "ansbsh141@gmail.com"
          $to = "ansbsh141@gmail.com"
          $subject = "üîê RDP Access Info - GitHub Runner"
          $body = @"
RDP Access Details:

IP Address: $env:TAILSCALE_IP
Username: RDP
Password: $env:RDP_PASSWORD

This info is valid for 24 hours. Workflow auto-renews daily.
"@
          $securePassword = ConvertTo-SecureString "${{ secrets.GMAIL_APP_PASSWORD }}" -AsPlainText -Force
          $cred = New-Object System.Management.Automation.PSCredential($from, $securePassword)
          Send-MailMessage -To $to -From $from -Subject $subject -Body $body -SmtpServer $smtpServer -Port $smtpPort -UseSsl -Credential $cred

      - name: Keep Alive
        run: |
          while ($true) {
            Write-Host "[$(Get-Date)] RDP Active"
            Start-Sleep -Seconds 300
          }
